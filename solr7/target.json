[
		{
			"id": 1,
			"name": "JavaEE Web前端开发技术",
			"brief": "JavaEE Web 前端开发技术",
			"credit": 0,
			"definition": "<p>岗位定义。。。。</p>",
			"description": "<p>目标简介。。。</p>",
			"period": 10,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumba.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Common",
			"status_code": "CATS_Init",
			"scope_code": "TARS_Skill",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 20,
			"price": 20,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": null,
			"definitionExtend": "<p>目标岗位要求。。。。</p>",
			"applyNumber": 149,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 1,
			"createTime": "2015-09-06 10:21:05",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 2,
			"name": "基于Java语言实现银行ATM应用",
			"brief": "了解 Java 语言的起源、发展历史，同时掌握 Java 开发必备的基础语法知识等",
			"credit": 0,
			"definition": "",
			"description": "<p>Java作为目前最流行的开发语言，在几乎所有行业得到了非常广泛的应用，此实训要求基于Java语言实现一套银行ATM应用，其实训目标为掌握Java基础语法知识。</p><p><b>核心知识：</b></p><ul><li>了解Java起源以及发展历史</li><li>掌握Java语言必备基础语法以及开发工具的使用<ul><li>JDK/Eclipse的安装配置</li><li>Java变量定义、数据类型、修饰符、注释、运算符等</li><li>Java选择控制语句、循环控制语句等</li><li>Java对象、类、包、数组等</li><li>...</li></ul></li><li>熟悉Java语言中常用的核心类库</li></ul><p><b>环境要求：</b></p><ul><li>JDK</li><li>Eclipse</li></ul>",
			"period": 6,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbo.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Basic",
			"status_code": "CATS_Release",
			"scope_code": "TARS_Practice",
			"commentNumber": 0,
			"group_code": "TARG_Uni",
			"point": 20,
			"price": 0,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 164,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-06 10:18:34",
			"updateTime": "2017-10-10 15:05:25",
			"isVIP": 0,
			"exerciseId": 87,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": ""
		},
		{
			"id": 4,
			"name": "JavaEE Web开发技术",
			"brief": "从初学者的角度详细讲解 JavaEE Web 开发中常用的基础技术知识",
			"credit": 0,
			"definition": "fsdfsdfsdfsdfsdfsdf",
			"description": "<p>JavaEE（原名J2EE）Java Enterprise Edition，Java企业版，多用于企业级应用的开发，JavaEE 构建于 JavaSE 技术基础之上，包含了众多企业应用开发标准，如：JTA、JMS、JSP、Servlet等。</p><p>此实训目标介绍 JavaEE 技术中与 Web 开发相关的基础环境、工具以及核心技术知识</p><ul><li>搭建JavaEE开发环境<br></li><li>JavaEE Web基础技术<br></li><li>JavaEE Web进阶技术<br></li></ul><p><b>面向人群：</b></p><ul><li>Java初级开发人员</li></ul>",
			"period": 15,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumb4.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Basic",
			"status_code": "CATS_Release",
			"scope_code": "TARS_Practice",
			"commentNumber": 0,
			"group_code": "TARG_Uni",
			"point": 40,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 1,
			"definitionExtend": "",
			"applyNumber": 122,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-09 21:45:18",
			"updateTime": "2017-03-15 11:26:40",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 5,
			"name": "JavaEE基础入门",
			"brief": "J2EE基础入门",
			"credit": 0,
			"definition": "<p>软件开发工程师</p><hr><p>软件开发工程师在软件开发管理团队制定的计划下，基于客户的业务需求和系统架构人员提出的软件系统概要设计，以及自己对于相关软件模块的理解和软件开发相关规范，完成软件系统详细设计，并解决项目开发过程中的技术要点。<br></p>",
			"description": "<p>需掌握如下知识：</p><p>1.Servlet</p><p>包括session的管理 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>采用Servlet Context访问resource &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>JSP技术 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>web层的模式&nbsp;</p><p>web应用的MVC Pattern &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>Handling Errors in Web Applications &nbsp; &nbsp; &nbsp;</p><p>配置web Application的安全 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>web application的并发访问 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>2.事务处理<br></p><p>3.安全策略</p><p>4.需求分析</p><p>基本的架构设计方法 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>创建Use Case Diagram &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>UML图 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>5.基本的设计模式掌握<br></p><p>Composite pattern. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>Strategy pattern. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>Observer pattern. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>Abstract Factory pattern. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>6.ejb</p><p>打包和部署EJB &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>CMP BMP Message-Driven Beans &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>CMP BMP 的事务实现 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>异常处理 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>定时服务 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>采用stateless bean实现webserive &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>EJB架构的最佳实践 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>7.J2EE</p><p>J2EE的安全架构实现 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>J2EE中Inside the Tier ，Tier-to-Tier Communication的优化</p><p>8.java编程语言</p><p>语法 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>控制语句 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>数据类型 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>异常 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>线程 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>I/O &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>Networking&nbsp;</p>",
			"period": 1,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbi.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Basic",
			"status_code": "CATS_Init",
			"scope_code": "TARS_Skill",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 20,
			"price": 20,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 1,
			"definitionExtend": "<p>理解与软件开发相关的计算机应用领域基础知识，并掌握该领域的基本技能。</p><p>1）了解计算机网络基本原理（如，理解计算机网络的通信原理、计算机网络安全的基础等），掌握计算机网络应用的基本技能（如，常见的计算机网络问题诊断方法，常用计算机网络应用命令）。</p><p>2）软件系统设计与架构（如，理解传统的软件架构模型及其相关功能，Web应用的搭建与维护，SOA架构，web service，XML等）</p><p>3）IT基础架构的维护与管理（如，熟练掌握Windows Server/Linux/Unix操作系统基本操作，具备维护、管理至少一种操作系统平台的基本能力，能够进行基本的Shell编程等）。</p><p>4）数据工程等（如，理解数据模型、表、视图、索引、数据库语言等数据库基本概念，熟练掌握SQL语言的基本操作、完整性约束、常用函数，了解数据库设计方法，了解数据仓库、商务智能的基本原理等）\"</p><p>理解面向对象方法学。</p><p>理解软件开发中常用算法。</p><p>理解.NET/J2EE的结构与框架。</p><p>掌握程序语言的初步设计。</p><p>熟悉计算机网络基础知识（如，TCP/IP协议、网络编程技术等）。</p><p>熟悉数据库管理及应用开发（如，Oracle，SQL Server，DB2等）。</p><p>熟悉软件工程的理念。&nbsp;</p><p>熟悉软件概要设计、详细设计、编码、单元测试工作及说明文档的编写等工作的要点与技巧。</p><p>深入理解软件开发的各种模型（V模型、迭代-增量开发模型）。</p><p>掌握统一建模语言UML，及其应用工具（如，Rational Rose， PowerDesigner等）。</p><p>理解敏捷开发的理念及其应用工具。</p><p>有意识跟进行业技术发展趋势，通过学习计划来掌握新技术。</p><p>具备问题场景拆解的能力，能够独立找到解决问题的有效方法。</p><p>能够耐心倾听他人的观点，基本把握、理解他人传递的信息。同时，能够比较完整地表达自己的意见和想法。</p><p>懂得结合任务的重要程度、紧急程度，有意识地协调团队内部的各种资源，按照任务优先级完成相关任务。</p><p>在工作中具备积极思考、不断创新意识。</p>",
			"applyNumber": 147,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-13 20:30:27",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 6,
			"name": "SpringMVC MyBatis集成实战",
			"brief": "此实训目标介绍 SpringMVC 、MyBatis 框架集成配置及应用开发",
			"credit": 0,
			"definition": "",
			"description": "<p><b>Spring MVC&nbsp;</b>作为SpringFramework家族中的核心框架之一是一种基于Java的实现了Web MVC设计模式的请求驱动类型的轻量级Web框架，即使用了MVC架构模式的思想，将web层进行职责解耦，基于请求驱动指的就是使用请求-响应模型，Spring MVC框架的目的就是帮助简化开发。</p><p><b>MyBatis&nbsp;</b>的前身叫 iBatis，本是 apache 的一个开源项目, 2010年这个项目由 apache software foundation 迁移到了google code，并且改名为 MyBatis。MyBatis 是一款一流的支持自定义SQL、存储过程和高级映射的持久化框架。MyBatis入门上手非常快，易学易用，是开发项目的一个不错的选择。MyBatis 几乎消除了所有的JDBC 代码，也基本不需要手工去设置参数和获取检索结果。MyBatis使用简单的XML 格式或者注解进行来配置，能够映射基本数据元素、Map 接口和POJOs（普通java 对象）到数据库中的记录。</p><p>此实训目标介绍 Spring MVC 和 MyBatis 框架集成配置及应用开发<br></p><p><b>面向人群：</b></p><ul><li>Java中级开发人员</li></ul><p><img alt=\"Slide5.png\" src=\"https://shixun.online/static/target/target-201603301032355733447462274780879853.png\" width=\"720\" height=\"405\"><br></p>",
			"period": 3,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbc.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Common",
			"status_code": "CATS_Release",
			"scope_code": "TARS_Practice",
			"commentNumber": 0,
			"group_code": "TARG_Uni",
			"point": 30,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 152,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-06 10:11:31",
			"updateTime": "2017-03-15 11:24:24",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 7,
			"name": "SpringMVC JDBC集成实战",
			"brief": "此实训目标基于案例讲解 SpringMVC 与 Spring JDBC Template 框架的集成使用方法",
			"credit": 0,
			"definition": "",
			"description": "<p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">Spring MVC 作为SpringFramework家族中的核心框架之一是一种基于Java的实现了Web MVC设计模式的请求驱动类型的轻量级Web框架，即使用了MVC架构模式的思想，将 Web 层进行职责解耦，基于请求驱动指的就是使用请求-响应模型，</span><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">Spring MVC</span><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">框架的目的就是帮助简化开发。</span><br></p><p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">Spring JdbcTemplate 作为 Spring 框架家族中的一种持久化实现方案，利用模板设计模式，通过对 JDBC 的深度封装和抽象，极大的简化了 JDBC 的编程操作。<br></span></p><p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">此实训目标基于案例讲解 Spring MVC 与 Spring JDBC Template 框架的集成使用方法<br></span></p><p><span style=\"color: rgb(51, 51, 51); font-size: 16px;\"><b>学习前提：</b></span></p><ul><li><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">掌握 Spring MVC 基本使用方法</span></li><li><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">了解 JDBC 基本概念及原理</span></li></ul><p><b>面向人群：</b></p><ul><li>Java中级开发人员</li></ul>",
			"period": 8,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumb6.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Common",
			"status_code": "CATS_Release",
			"scope_code": "TARS_Practice",
			"commentNumber": 0,
			"group_code": "TARG_Uni",
			"point": 25,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 146,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-06 10:12:17",
			"updateTime": "2017-03-15 14:11:16",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 8,
			"name": "Java初级工程师",
			"brief": "学习和掌握Java开发基础知识技能，如：Java语法、编码规范、常用开源框架的使用等。",
			"credit": 0,
			"definition": "<p>&nbsp; &nbsp; &nbsp; &nbsp; <b>Java软件工程师</b>英文是Java Software Engineer，是对从事Java软件设计或开发职业的人员的一种职业能力的认证，通过它说明具备了Java应用开发工程师的资格。<b>软件工程师</b>是从事软件开发相关工作的人员的统称。它是一个广义的概念，包括软件设计人员、软件架构人员、软件工程管理人员、程序员等一系列岗位，工作内容都与软件开发生产相关。软件工程师的技术要求是比较全面的，除了最基础的编程语言（C语言/C++/JAVA等）、数据库技术（SQL/ORACLE/DB2等）等，还有诸多如JAVASCRIPT、AJAX、HIBERNATE、SPRING等前沿技术。此外，关于网络工程和软件测试的其他技术也要有所涉猎。</p>",
			"description": "<p>&nbsp; &nbsp; &nbsp; &nbsp; Java是由Sun Microsystems公司于1995年5月推出的一种可以撰写跨平台应用软件的面向对象的程序设计语言，Java平台总体包括：JavaSE，JavaEE，JavaME。Java 技术具有卓越的通用性、高效性、平台移植性和安全性，广泛应用于个人PC、数据中心、科学算机、移动电话和互联网，在全球云计算和移动互联网的产业蓬勃发展环境下，Java更具备了显著优势和广阔前景。 &nbsp; &nbsp; &nbsp;&nbsp;<br><span style=\"color: rgb(51, 51, 51); font-size: 14px;\"></span></p><p>&nbsp; &nbsp; &nbsp; &nbsp; Java 初级工程师阶段重点掌握计算机应用与软件技术基础、结构化程序设计、应用程序开发实践、互联网站点设计与建设、Java语言等专业课程，同时进行职业素质训练与静态网站建设的项目实战，达到初级工程师水平，为向更高一级的软件工程师发展打下坚实基础。初级程序员学习阶段大约需要3个月的理论学习和项目实战训练，完成学业时可以独立完成静态网站的开发与设计工作。</p><h3 style=\"text-align: center;\"><span style=\"font-size: 14px;\"><b>企业实训岗位申请&amp;学习流程</b></span></h3><p style=\"text-align: center;\"><span style=\"color: rgb(51, 51, 51); font-size: 14px;\"><img alt=\"Screen Shot 2016-03-14 at 7.34.10 PM.png\" src=\"https://shixun.online/static/target/target-201603161105537391201349981809606294.png\" width=\"660\" height=\"288.35820895522386\"><br></span></p><p>Java开发实训总体分为六个阶段进行讲解和学习：</p><blockquote><p><b>第一阶段：Java语言基础知识</b></p><p>学习和掌握Java语言相关基础知识，如变量定义、控制语句、数据结构等</p></blockquote><blockquote><p><b>第二阶段：JavaEE Web前端基础知识</b></p><p>学习和掌握与Web前端开发相关的基础知识，如HTML、CSS、JavaScript等</p></blockquote><blockquote><p><b>第三阶段：JavaEE Web服务器端基础知识</b></p><p>学习和掌握与Web服务器端开发相关的基础知识，如Servlet、JSP、MVC等</p></blockquote><blockquote><p><b>第四阶段：数据库相关基础知识</b></p><p>学习和掌握数据库开发基础知识，如SQL语句、关系数据库设计等</p></blockquote><blockquote><p><b>第五阶段：Java延伸技能及开发框架</b></p><p>学习和掌握Java相关主流开发框架的配置和使用，如Spring、Struts、Hibernate、MyBatis等</p></blockquote><blockquote><p><b>第六阶段：项目管理&amp;软件设计</b></p><p>学习和掌握软件工程基础知识和主流软件设计方法及流程，如UML基础知识、软件开发模式介绍等</p></blockquote>",
			"period": 60,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbg.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Advance",
			"status_code": "CATS_Init",
			"scope_code": "TARS_Post",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 50,
			"price": 50,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 1,
			"definitionExtend": "<ul><li>熟悉JavaEE技术架构体系及相关技术；<br><span style=\"color: rgb(51, 51, 51); font-size: 16px;\"></span></li><li>熟悉Struts、Spring、Hibernate、MyBatis等主流开源框架；</li><li>熟练使用JavaBean、Servlet、Jsp、WebService等开发技术；</li><li>熟练使用HTML、CSS、JavaScript、AJAX等客户端开发技术；</li><li>熟练掌握Tomcat、Jboss等主流应用服务器的配置和使用；</li><li>熟练Oracle、MySQL等主流数据库以及SQL基础操作；</li><li>熟练使用Eclipe、Git、SVN等开发与管理工具；</li><li>有较强的业务理解能力，责任心强，善于协作，较强的自我学习能力；</li></ul>",
			"applyNumber": 0,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-17 17:32:50",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 9,
			"name": "Java中级工程师",
			"brief": "Java中级开发工程师",
			"credit": 0,
			"definition": "",
			"description": "<p><span style=\"color: rgb(51, 51, 51); font-size: 14px;\">软件工程师阶段要学习Oracle实用教程、java程序设计与高级应用、软件工程、C#语言、Windows高级编程、XML、数据结构、基于.et平台下的技术平台项目等专业技术，同时进行职业素质训练和项目实战，为成为全国信息化工程师中的高级软件架构师打下扎实基础。软件工程师阶段（中级程序员）大约需要5-6个月的时间，完成该阶段学习后可以独立完成酒店管理系统、营销管理系统、网上商城、以及初级JAVA开发、.NET开发等相关项目。</span><br></p>",
			"period": 1,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbd.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Common",
			"status_code": "CATS_Init",
			"scope_code": "TARS_Post",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 10,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "<p>1、熟练的使用Java语言进行面向对象程序设计，有良好的编程习惯，熟悉常用的Java API，包括集合框架、多线程（并发编程）、I/O（NIO）、Socket、JDBC、XML、反射等。</p><p>2、熟悉基于JSP和Servlet的Java Web开发，对Servlet和JSP的工作原理和生命周期有深入了解，熟练的使用JSTL和EL编写无脚本动态页面，有使用监听器、过滤器等Web组件以及MVC架构模式进行Java Web项目开发���经验。</p><p>3、对Spring的IoC容器和AOP原理有深入了解，熟练的运用Spring框架管理各种Web组件及其依赖关系，熟练的使用Spring进行事务、日志、安全性等的管理，有使用SpringMVC作为表示层技术以及使用Spring提供的持久化支持进行Web项目开发的经验，熟悉Spring对其他框架的整合。</p><p>4、熟练的使用Hibernate、MyBatis等ORM框架，熟悉Hibernate和MyBatis的核心API，对Hibernate的关联映射、继承映射、组件映射、缓存机制、事务管理以及性能调优等有深入的理解。</p><p>5、熟练的使用HTML、CSS和JavaScript进行Web前端开发，熟悉jQuery和Bootstrap，对Ajax技术在Web项目中的应用有深入理解，有使用前端MVC框架（AngularJS）和JavaScript模板引擎（HandleBars）进行项目开发的经验。</p><p>6、熟悉常用的关系型数据库产品（MySQL、Oracle），熟练的使用SQL和PL/SQL进行数据库编程。</p><p>7、熟悉面向对象的设计原则，对GoF设计模式和企业应用架构模式有深入的了解和实际开发的相关经验，熟练的使用UML进行面向对象的分析和设计，有TDD（测试驱动开发）和DDD（领域驱动设计）的经验。</p>",
			"applyNumber": 0,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-17 17:33:10",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 10,
			"name": "JavaEE服务器端基础技术",
			"brief": "JavaEE Web 服务器端开发技术",
			"credit": 0,
			"definition": "",
			"description": "",
			"period": 15,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumb8.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Common",
			"status_code": "CATS_Init",
			"scope_code": "TARS_Skill",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 20,
			"price": 20,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 146,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 1,
			"createTime": "2015-09-06 10:20:53",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 14,
			"name": "前端初级工程师",
			"brief": "前端初级工程师",
			"credit": 0,
			"definition": "",
			"description": "",
			"period": 1,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbb.png",
			"devLanguage_id": 2,
			"level_code": "CATL_Basic",
			"status_code": "CATS_Init",
			"scope_code": "TARS_Post",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 10,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 0,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-17 17:36:18",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 15,
			"name": "前端中级工程师",
			"brief": "前端中级工程师",
			"credit": 0,
			"definition": "",
			"description": "",
			"period": 1,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbe.png",
			"devLanguage_id": 2,
			"level_code": "CATL_Basic",
			"status_code": "CATS_Init",
			"scope_code": "TARS_Post",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 10,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 0,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-17 17:43:57",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 16,
			"name": "Android初级工程师",
			"brief": "Android初级工程师",
			"credit": 0,
			"definition": "",
			"description": "",
			"period": 1,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbx.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Basic",
			"status_code": "CATS_Init",
			"scope_code": "TARS_Post",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 10,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 0,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-17 19:19:58",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 17,
			"name": "Android中级工程师",
			"brief": "Android中级工程师",
			"credit": 0,
			"definition": "",
			"description": "",
			"period": 1,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumb2.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Common",
			"status_code": "CATS_Init",
			"scope_code": "TARS_Post",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 10,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 0,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-17 19:20:21",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 18,
			"name": "Java排序算法实践",
			"brief": "此实训通过代码实践练习，学习和掌握基于 Java 语言实现的常用排序算法",
			"credit": 0,
			"definition": "",
			"description": "<p>此实训通过代码实践练习，学习和掌握基于 Java 语言实现的常用排序算法，包括：<br></p><ul><li>冒泡排序算法<br></li><li>选择排序算法<br></li><li>插入排序算法<br></li><li>归并排序算法<br></li><li>快速排序算法<br></li></ul>",
			"period": 3,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbj.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Basic",
			"status_code": "CATS_Release",
			"scope_code": "TARS_Practice",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 40,
			"price": 5,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 156,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-18 21:46:58",
			"updateTime": "2017-03-15 11:24:46",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 19,
			"name": "JavaEE开发环境搭建 ",
			"brief": "介绍 JavaEE 开发相关环境的安装及配置 ",
			"credit": 0,
			"definition": "",
			"description": "<p>在进行 JavaEE 应用开发之前，首先要做的第一件事就是搭建 JavaEE 本机开发环境。<br></p><p><b>核心知识：</b></p><ul><li>完成 JavaEE 基础开发环境<span style=\"color: rgb(51, 51, 51); font-size: 16px;\">（ JDK、Eclipse、Tomcat ）</span><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">安装和配置</span></li><li>完成数据库开发环境<span style=\"color: rgb(51, 51, 51); font-size: 16px;\">（ MySQL ）</span><span style=\"color: rgb(51, 51, 51); font-size: 16px;\">安装和配置</span></li><li>完成项目构建工具（ Maven ）及版本控制工具（ Git ）安装和配置</li><li>创建个人 Github 账户，并提交第一个 Java 项目（HelloWorld）到 GitHub 上</li></ul><p><b>适合人群：</b></p><ul><li>Java 初级学员</li></ul><p><b>学习前提：</b></p><ul><li>计算机硬件：内存 4G+</li><li>操作系统：Windows 7 /&nbsp;<span style=\"color: rgb(51, 51, 51); font-size: 16px;\">8 /&nbsp;<span style=\"color: rgb(51, 51, 51); font-size: 16px;\">10</span></span></li></ul><p><img alt=\"核心特色及流程.png\" src=\"https://shixun.online/static/target/target-201603142041028702716001782020675165.png\" width=\"350\" height=\"360.5\"><br></p><p><br></p><p><img alt=\"Screen Shot 2017-05-20 at 7.46.16 PM.png\" src=\"https://shixun.online/static/target/target-201705201948308635158182078394817361.png\" width=\"600\" height=\"355.2\"><br></p>",
			"period": 2,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbk.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Basic",
			"status_code": "CATS_Release",
			"scope_code": "TARS_Skill",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 5,
			"price": 5,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 199,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-18 21:53:38",
			"updateTime": "2017-11-29 22:42:34",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": ""
		},
		{
			"id": 20,
			"name": "数据库必备基础入门",
			"brief": "数据库必备基础入门",
			"credit": 0,
			"definition": "",
			"description": "",
			"period": 10,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbl.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Common",
			"status_code": "CATS_Review",
			"scope_code": "TARS_Skill",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 10,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 146,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-18 21:54:55",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 21,
			"name": "Java安全技术实践",
			"brief": "Java 安全技术实践",
			"credit": 0,
			"definition": "",
			"description": "",
			"period": 5,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumb3.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Advance",
			"status_code": "CATS_Init",
			"scope_code": "TARS_Skill",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 10,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 0,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 1,
			"createTime": "2015-09-18 21:56:07",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 22,
			"name": "Java核心类库简介",
			"brief": "Java 核心类库简介",
			"credit": 0,
			"definition": "",
			"description": "",
			"period": 5,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbn.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Basic",
			"status_code": "CATS_Init",
			"scope_code": "TARS_Skill",
			"commentNumber": 0,
			"group_code": "TARG_Open",
			"point": 10,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 0,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-18 22:00:12",
			"updateTime": "2017-02-20 09:00:21",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 23,
			"name": "UML快速进阶",
			"brief": "此实训介绍 UML 基础知识以及常用 UML 图的设计和使用方法",
			"credit": 0,
			"definition": "",
			"description": "<p><span style=\"font-size: 16px;\"><b style=\"color: rgb(65, 140, 175);\">UML</b>（</span>Unified Modeling Language ）又称统一建模语言或标准建模语言，是始于1997年一个OMG标准，它是一个支持模型化和软件系统开发的图形化语言，为软件开发的所有阶段提供模型化和可视化支持，包括由需求分析到规格，到构造和配置。 面向对象的分析与设计(OOA&amp;D，OOAD)方法的发展在80年代末至90年代中出现了一个高潮，UML是这个高潮的产物。它不仅统一了Booch、Rumbaugh和Jacobson的表示方法，而且对其作了进一步的发展，并最终统一为大众所接受的标准建模语言。<br></p><p>&nbsp;“UML快速进阶”主要介绍UML基础知识以及常用图的设计和使用。</p><p style=\"text-align: center;\"><img alt=\"Screen Shot 2016-03-16 at 11.32.02 AM.png\" src=\"https://shixun.online/static/target/target-201603161156504461912201150892692871.png\" width=\"500\" height=\"483.6363636363636\"><br></p>",
			"period": 5,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbr.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Extend",
			"status_code": "CATS_Release",
			"scope_code": "TARS_Practice",
			"commentNumber": 0,
			"group_code": "TARG_Uni",
			"point": 30,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 0,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-18 22:00:49",
			"updateTime": "2017-03-15 11:24:54",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 24,
			"name": "Java 集合操作实践",
			"brief": "练习和掌握 Java 常用集合类的相关使用方法，如：List、Set、Map等。",
			"credit": 0,
			"definition": "",
			"description": "<p>Java 集合类用于存储一系列的对象内容（存储对象引用，而非对象本身），常用集合类型主要有3种：</p><ul><li>set(集）</li><li>list(列表）</li><li>map(映射)</li></ul><p>以下为 Java 集合类图，其中实线边框的是实现类，比如ArrayList，LinkedList，HashMap等，折线边框的是抽象类，比如AbstractCollection，AbstractList，AbstractMap等，而点线边框的是接口，比如Collection，Iterator，List等。</p><p><img alt=\"2012053020260298.jpg.bmp\" src=\"https://shixun.online/static/target/target-201609101714009737066379743373481500.bmp\" width=\"530\" height=\"499\"><br></p>",
			"period": 5,
			"popularity": 0,
			"targetMapId": 7,
			"thumbnail": "thumbs.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Advance",
			"status_code": "CATS_Release",
			"scope_code": "TARS_Practice",
			"commentNumber": 0,
			"group_code": "TARG_Uni",
			"point": 35,
			"price": 5,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 22,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-18 22:06:09",
			"updateTime": "2017-08-02 16:08:01",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": ""
		},
		{
			"id": 26,
			"name": "设计模式-创建型模式实战",
			"brief": "创建型模式主要是将对象创建工作延迟到了子类或将其延迟到了另外的对象。",
			"credit": 0,
			"definition": "",
			"description": "<p>&nbsp;社会化的分工越来越细，自然在软件设计方面也是如此，因此对象的创建和对象的使用分开也就成为了必然趋势。因为对象的创建会消耗掉系统的很多资源，所以单独对对象的创建进行研究，从而能够高效地创建对象就是创建型模式要探讨的问题。</p><p>创建型模式(Creational Pattern)对类的实例化过程进行了抽象，能够将软件模块中对象的创建和对象的使用分离。为了使软件的结构更加清晰，外界对于这些对象只需要知道它们共同的接口，而不清楚其具体的实现细节，使整个系统的设计更加符合单一职责原则。</p><p>创建型模式在创建什么(What)，由谁创建(Who)，何时创建(When)等方面都为软件设计者提供了尽可能大的灵活性。创建型模式隐藏了类的实例的创建细节，通过隐藏对象如何被创建和组合在一起达到使整个系统独立的目的。</p><hr><p>创建型设计模式主要包括：</p><blockquote><p>&nbsp;工厂方法模式（Factory Method）；</p><p>&nbsp;抽象工厂模式（Abstract Factory）；</p><p>&nbsp;创建者模式（Builder）；</p><p>&nbsp;原型模式（Prototype）；</p><p>&nbsp;单例模式（Singleton）。</p></blockquote>",
			"period": 5,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbf.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Advance",
			"status_code": "CATS_Release",
			"scope_code": "TARS_Practice",
			"commentNumber": 0,
			"group_code": "TARG_Uni",
			"point": 35,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 1,
			"definitionExtend": "",
			"applyNumber": 6,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-03-03 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-20 15:10:33",
			"updateTime": "2017-03-15 14:13:52",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		},
		{
			"id": 27,
			"name": "设计模式-结构型模式实战",
			"brief": "结构型类模式主要是应用继承机制来合成类，同时规定了装配对象的方式",
			"credit": 0,
			"definition": "",
			"description": "<p>在解决了对象的创建问题之后，对象的组成以及对象之间的依赖关系就成了开发人员关注的焦点，因为如何设计对象的结构、继承和依赖关系会影响到后续程序的维护性、代码的健壮性、耦合性等。对象结构的设计很容易体现出设计人员水平的高低。</p><p>结构型模式(Structural Pattern)描述如何将类或者对 象结合在一起形成更大的结构，就像搭积木，可以通过 简单积木的组合形成复杂的、功能更为强大的结构。</p><hr><p>结构型设计模式主要包括：</p><blockquote><p>&nbsp;外观模式（Facade）</p><p>&nbsp;适配器模式（Adapter）</p><p>&nbsp;代理模式（Proxy）</p><p>&nbsp;装饰模式（Decorator）</p><p>&nbsp;桥模式（Bridge）</p><p>&nbsp;组合模式（Composite）</p><p>&nbsp;享元模式（Flyweight）</p></blockquote>",
			"period": 5,
			"popularity": 0,
			"targetMapId": 0,
			"thumbnail": "thumbt.png",
			"devLanguage_id": 1,
			"level_code": "CATL_Advance",
			"status_code": "CATS_Release",
			"scope_code": "TARS_Practice",
			"commentNumber": 0,
			"group_code": "TARG_Uni",
			"point": 30,
			"price": 10,
			"vipPrice": 0,
			"discount": 0,
			"positionType": 0,
			"resourceId": 0,
			"definitionExtend": "",
			"applyNumber": 6,
			"positionId": 0,
			"indexNo": 0,
			"planReleaseDate": "2015-12-31 00:00:00",
			"removeMark": 0,
			"createTime": "2015-09-20 15:10:57",
			"updateTime": "2017-03-15 14:18:46",
			"isVIP": 0,
			"exerciseId": null,
			"courseId": null,
			"resourcePath": null,
			"resourceDescription": null
		}
	]